{"ast":null,"code":"var _jsxFileName = \"/home/jakub/Projects/tic-tac-toe/src/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport ThemeToggler from './ThemeToggler';\nimport Score from './Score';\nimport Restart from './Restart';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [themeGrey, setThemeGrey] = useState(false);\n  const theme = themeGrey ? 'grey' : 'color';\n  const [score, setScore] = useState({\n    'x': 0,\n    'o': 0\n  });\n  const [restart, setRestart] = useState(false);\n\n  const handleThemeChange = () => {\n    setThemeGrey(prev => !prev);\n  };\n\n  const handleScoreUpdate = updatePlayer => {\n    setScore(prevScore => {\n      return { ...prevScore,\n        [updatePlayer]: prevScore[updatePlayer] + 1\n      };\n    });\n  };\n\n  const handleRestart = () => {\n    setRestart(true);\n  };\n\n  const unsetRestart = () => {\n    setRestart(false);\n  };\n\n  const {\n    mode: size,\n    type\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container app-container--${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(Restart, {\n      onClickHandler: handleRestart,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ThemeToggler, {\n      theme: theme,\n      onClickHandler: handleThemeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      score: score,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      scoreHandler: handleScoreUpdate,\n      restart: restart,\n      unsetRestart: unsetRestart,\n      size: +size,\n      isAI: type === 'pvc'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Game, \"CNAwKwGh9o9TviATdf7yk3reS9w=\", false, function () {\n  return [useParams];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/jakub/Projects/tic-tac-toe/src/Game.tsx"],"names":["React","useState","Board","ThemeToggler","Score","Restart","useParams","Game","themeGrey","setThemeGrey","theme","score","setScore","restart","setRestart","handleThemeChange","prev","handleScoreUpdate","updatePlayer","prevScore","handleRestart","unsetRestart","mode","size","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMS,KAAK,GAAGF,SAAS,GAAG,MAAH,GAAY,OAAnC;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAiB;AAAE,SAAK,CAAP;AAAU,SAAK;AAAf,GAAjB,CAAlC;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,iBAAiB,GAAG,MAAM;AAC9BN,IAAAA,YAAY,CAACO,IAAI,IAAI,CAACA,IAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,YAAD,IAA0B;AAClDN,IAAAA,QAAQ,CAACO,SAAS,IAAI;AACpB,aAAO,EACL,GAAGA,SADE;AAEL,SAACD,YAAD,GAAgBC,SAAS,CAACD,YAAD,CAAT,GAA0B;AAFrC,OAAP;AAID,KALO,CAAR;AAMD,GAPD;;AASA,QAAME,aAAa,GAAG,MAAM;AAC1BN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAG,MAAM;AACzBP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AASA,QAAM;AAAEQ,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA;AAAd,MAAuBlB,SAAS,EAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,gCAA+BI,KAAM,EAAtD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,cAAc,EAAEU,aAAzB;AAAwC,MAAA,KAAK,EAAEV;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,cAAc,EAAEK;AAFlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,KAAd;AAAqB,MAAA,KAAK,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AACE,MAAA,YAAY,EAAEO,iBADhB;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,YAAY,EAAEQ,YAHhB;AAIE,MAAA,IAAI,EAAE,CAACE,IAJT;AAKE,MAAA,IAAI,EAAEC,IAAI,KAAK;AALjB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBD,CAvDD;;GAAMjB,I;UAoCyBD,S;;;KApCzBC,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\nimport ThemeToggler from './ThemeToggler';\nimport { ScoreInterface } from './shared/interfaces';\nimport Score from './Score';\nimport Restart from './Restart';\nimport { useParams } from 'react-router-dom';\n\nconst Game = () => {\n\n  const [themeGrey, setThemeGrey] = useState(false);\n\n  const theme = themeGrey ? 'grey' : 'color';\n  \n  const [score, setScore] = useState<ScoreInterface>({ 'x': 0, 'o': 0 });\n\n  const [restart, setRestart] = useState(false);\n\n  const handleThemeChange = () => {\n    setThemeGrey(prev => !prev)\n  }\n\n  const handleScoreUpdate = (updatePlayer: string) => {\n    setScore(prevScore => {\n      return {\n        ...prevScore,\n        [updatePlayer]: prevScore[updatePlayer] + 1,\n      }\n    });\n  }\n\n  const handleRestart = () => {\n    setRestart(true);\n  }\n\n  const unsetRestart = () => {\n    setRestart(false);\n  }\n\n  type GameParams = {\n    mode: string,\n    type: string\n  }\n\n  const { mode: size, type } = useParams<GameParams>();\n\n  return (\n      <div className={`app-container app-container--${theme}`}>\n        <Restart onClickHandler={handleRestart} theme={theme} />\n        <ThemeToggler\n          theme={theme}\n          onClickHandler={handleThemeChange}\n        />\n        <Score score={score} theme={theme} />\n        <Board\n          scoreHandler={handleScoreUpdate}\n          restart={restart}\n          unsetRestart={unsetRestart}\n          size={+size}\n          isAI={type === 'pvc'}\n        />\n      </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}