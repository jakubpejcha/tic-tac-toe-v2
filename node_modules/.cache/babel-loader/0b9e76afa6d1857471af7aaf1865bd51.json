{"ast":null,"code":"import _defineProperty from\"/home/jakub/Projects/tic-tac-toe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/jakub/Projects/tic-tac-toe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/jakub/Projects/tic-tac-toe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import Board from'./Board';import ThemeToggler from'./ThemeToggler';import Score from'./Score';import Restart from'./Restart';import Back from'./Back';import{useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Game=function Game(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),themeGrey=_useState2[0],setThemeGrey=_useState2[1];var theme=themeGrey?'grey':'color';var _useState3=useState({'x':0,'o':0}),_useState4=_slicedToArray(_useState3,2),score=_useState4[0],setScore=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),restart=_useState6[0],setRestart=_useState6[1];var handleThemeChange=function handleThemeChange(){setThemeGrey(function(prev){return!prev;});};var handleScoreUpdate=function handleScoreUpdate(updatePlayer){setScore(function(prevScore){return _objectSpread(_objectSpread({},prevScore),{},_defineProperty({},updatePlayer,prevScore[updatePlayer]+1));});};var handleRestart=function handleRestart(restart){setRestart(restart);};// const unsetRestart = () => {\n//   setRestart(false);\n// }\nvar _useParams=useParams(),size=_useParams.mode,type=_useParams.type;return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container app-container--\".concat(theme),children:[/*#__PURE__*/_jsx(Back,{goToPath:null}),/*#__PURE__*/_jsx(Restart,{onClickHandler:handleRestart,theme:theme}),/*#__PURE__*/_jsx(ThemeToggler,{theme:theme,onClickHandler:handleThemeChange}),/*#__PURE__*/_jsx(Score,{score:score,theme:theme}),/*#__PURE__*/_jsx(Board,{scoreHandler:handleScoreUpdate,restart:restart,handleRestart:handleRestart,size:+size,isAI:type==='pvc'})]});};export default Game;","map":{"version":3,"sources":["/home/jakub/Projects/tic-tac-toe/src/Game.tsx"],"names":["useState","Board","ThemeToggler","Score","Restart","Back","useParams","Game","themeGrey","setThemeGrey","theme","score","setScore","restart","setRestart","handleThemeChange","prev","handleScoreUpdate","updatePlayer","prevScore","handleRestart","size","mode","type"],"mappings":"scAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,SAAT,KAAyB,kBAAzB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eAEiBP,QAAQ,CAAC,KAAD,CAFzB,wCAEVQ,SAFU,eAECC,YAFD,eAIjB,GAAMC,CAAAA,KAAK,CAAGF,SAAS,CAAG,MAAH,CAAY,OAAnC,CAJiB,eAMSR,QAAQ,CAAiB,CAAE,IAAK,CAAP,CAAU,IAAK,CAAf,CAAjB,CANjB,yCAMVW,KANU,eAMHC,QANG,8BAQaZ,QAAQ,CAAC,KAAD,CARrB,yCAQVa,OARU,eAQDC,UARC,eAUjB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BN,YAAY,CAAC,SAAAO,IAAI,QAAI,CAACA,IAAL,EAAL,CAAZ,CACD,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,YAAD,CAA0B,CAClDN,QAAQ,CAAC,SAAAO,SAAS,CAAI,CACpB,sCACKA,SADL,wBAEGD,YAFH,CAEkBC,SAAS,CAACD,YAAD,CAAT,CAA0B,CAF5C,GAID,CALO,CAAR,CAMD,CAPD,CASA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACP,OAAD,CAAsB,CAC1CC,UAAU,CAACD,OAAD,CAAV,CACD,CAFD,CAIA;AACA;AACA;AA7BiB,eAoCYP,SAAS,EApCrB,CAoCHe,IApCG,YAoCTC,IApCS,CAoCGC,IApCH,YAoCGA,IApCH,CAuCjB,mBACI,aAAK,SAAS,wCAAkCb,KAAlC,CAAd,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAE,IAAhB,EADF,cAEE,KAAC,OAAD,EAAS,cAAc,CAAEU,aAAzB,CAAwC,KAAK,CAAEV,KAA/C,EAFF,cAGE,KAAC,YAAD,EACE,KAAK,CAAEA,KADT,CAEE,cAAc,CAAEK,iBAFlB,EAHF,cAOE,KAAC,KAAD,EAAO,KAAK,CAAEJ,KAAd,CAAqB,KAAK,CAAED,KAA5B,EAPF,cAQE,KAAC,KAAD,EACE,YAAY,CAAEO,iBADhB,CAEE,OAAO,CAAEJ,OAFX,CAGE,aAAa,CAAEO,aAHjB,CAIE,IAAI,CAAE,CAACC,IAJT,CAKE,IAAI,CAAEE,IAAI,GAAK,KALjB,EARF,GADJ,CAkBD,CAzDD,CA2DA,cAAehB,CAAAA,IAAf","sourcesContent":["import { useState } from 'react';\nimport Board from './Board';\nimport ThemeToggler from './ThemeToggler';\nimport { ScoreInterface } from './shared/interfaces';\nimport Score from './Score';\nimport Restart from './Restart';\nimport Back from './Back';\nimport { useParams} from 'react-router-dom';\n\nconst Game = () => {\n\n  const [themeGrey, setThemeGrey] = useState(false);\n\n  const theme = themeGrey ? 'grey' : 'color';\n  \n  const [score, setScore] = useState<ScoreInterface>({ 'x': 0, 'o': 0 });\n\n  const [restart, setRestart] = useState(false);\n\n  const handleThemeChange = () => {\n    setThemeGrey(prev => !prev)\n  }\n\n  const handleScoreUpdate = (updatePlayer: string) => {\n    setScore(prevScore => {\n      return {\n        ...prevScore,\n        [updatePlayer]: prevScore[updatePlayer] + 1,\n      }\n    });\n  }\n\n  const handleRestart = (restart: boolean) => {\n    setRestart(restart);\n  }\n\n  // const unsetRestart = () => {\n  //   setRestart(false);\n  // }\n\n  type GameParams = {\n    mode: string,\n    type: string\n  }\n\n  const { mode: size, type } = useParams<GameParams>();\n  \n\n  return (\n      <div className={`app-container app-container--${theme}`}>\n        <Back goToPath={null} />\n        <Restart onClickHandler={handleRestart} theme={theme} />\n        <ThemeToggler\n          theme={theme}\n          onClickHandler={handleThemeChange}\n        />\n        <Score score={score} theme={theme} />\n        <Board\n          scoreHandler={handleScoreUpdate}\n          restart={restart}\n          handleRestart={handleRestart}\n          size={+size}\n          isAI={type === 'pvc'}\n        />\n      </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}